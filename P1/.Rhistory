adult.training <- read.csv("adult.training.csv", header = TRUE, sep = ",")
library(readr)
adult_test <- read_csv("~/GitHub/master_informatica-SIGE/S4/adult.test.csv")
View(adult_test)
library(readr)
adult_training <- read_csv("~/GitHub/master_informatica-SIGE/S4/adult.training.csv")
View(adult_training)
adult.training <- read.csv("adult.training.csv", header = TRUE, sep = ",")
adult.test <- read.csv("adult.test.csv", header = TRUE, sep = ",")
setwd("~/GitHub/master_informatica-SIGE/P1")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
library(randomForest)
library(party)
test$Survived <- NA
combi <- rbind(train, test)
combi$Name <- as.character(combi$Name)
combi$Title <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
combi$Title <- sub(' ', '', combi$Title)
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
combi$Title <- factor(combi$Title)
combi$FamilySize <- combi$SibSp + combi$Parch + 1
combi$Surname <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize), combi$Surname, sep="")
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
famIDs <- data.frame(table(combi$FamilyID))
famIDs <- famIDs[famIDs$Freq <= 2,]
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
combi$FamilyID <- factor(combi$FamilyID)
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,
data=combi[!is.na(combi$Age),], method="anova")
combi$Age[is.na(combi$Age)] <- predict(Agefit, combi[is.na(combi$Age),])
combi$Embarked[c(62,830)] = "S"
combi$Embarked <- factor(combi$Embarked)
combi$Fare[1044] <- median(combi$Fare, na.rm=TRUE)
combi$FamilyID2 <- combi$FamilyID
combi$FamilyID2 <- as.character(combi$FamilyID2)
combi$FamilyID2[combi$FamilySize <= 3] <- 'Small'
combi$FamilyID2 <- factor(combi$FamilyID2)
train <- combi[1:891,]
test <- combi[892:1309,]
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID2,
data=train, method="class")
fancyRpartPlot(fit)
Prediction <- predict(fit, test, type = "class")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
set.seed(14)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,
data=train, importance=TRUE, ntree=2000)
set.seed(14)
fit <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID2,
data=train, importance=TRUE, ntree=2000)
varImpPlot(fit)
Prediction <- predict(fit, test)
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "firstforest.csv", row.names = FALSE)
set.seed(14)
fit <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + Title + FamilySize + FamilyID,
data = train, controls=cforest_unbiased(ntree=2000, mtry=3))
Prediction <- predict(fit, test, OOB=TRUE, type = "response")
submit <- data.frame(PassengerId = test$PassengerId, Survived = Prediction)
write.csv(submit, file = "cforest.csv", row.names = FALSE)
varImpPlot(fit)
train <- read.csv("train.csv")
test <- read.csv("test.csv")
library(rpart)
library(randomForest)
library(party)
library(kernlab)
library(caret)
library(xgboost)
test$Survived <- NA
combi <- rbind(train, test)
combi$Name <- as.character(combi$Name)
combi$Title <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][2]})
combi$Title <- sub(' ', '', combi$Title)
combi$Title[combi$Title %in% c('Mme', 'Mlle')] <- 'Mlle'
combi$Title[combi$Title %in% c('Capt', 'Don', 'Major', 'Sir')] <- 'Sir'
combi$Title[combi$Title %in% c('Dona', 'Lady', 'the Countess', 'Jonkheer')] <- 'Lady'
combi$Title <- factor(combi$Title)
combi$FamilySize <- combi$SibSp + combi$Parch + 1
combi$Surname <- sapply(combi$Name, FUN=function(x) {strsplit(x, split='[,.]')[[1]][1]})
combi$FamilyID <- paste(as.character(combi$FamilySize), combi$Surname, sep="")
combi$FamilyID[combi$FamilySize <= 2] <- 'Small'
famIDs <- data.frame(table(combi$FamilyID))
famIDs <- famIDs[famIDs$Freq <= 2,]
combi$FamilyID[combi$FamilyID %in% famIDs$Var1] <- 'Small'
combi$FamilyID <- factor(combi$FamilyID)
Agefit <- rpart(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + Title + FamilySize,
data=combi[!is.na(combi$Age),], method="anova")
combi$Age[is.na(combi$Age)] <- predict(Agefit, combi[is.na(combi$Age),])
combi$Embarked[c(62,830)] = "S"
combi$Embarked <- factor(combi$Embarked)
combi$Fare[1044] <- median(combi$Fare, na.rm=TRUE)
train <- combi[1:891,]
test <- combi[892:1309,]
predictorsNames = names(train)[names(train) != 'Survived'] #names of columns after data conversion
dtrain<-xgb.DMatrix(data=data.matrix(train[,predictorsNames]),label=train$Survived)
dtest<-data.matrix(test[,predictorsNames])
param <- list(  objective           = "binary:logistic",
booster             = "gbtree",
eval_metric         = "logloss"
)
nround  = 3382
set.seed(14)
clf <- xgboost(param =param, dtrain, nrounds=nround, min_child_weight=1,verbose=0)
pred <- predict(clf, dtest)
pred_final <- ifelse(pred>0.5,1,0)
submit <- data.frame(PassengerId = test$PassengerId, Survived = pred_final)
write.csv(submit, file = "xgboost.csv", row.names = FALSE)
setwd("~/GitHub/master_informatica-SIGE/P1")
train <- read.csv("train.csv")
test <- read.csv("test.csv")
test2 <- read.csv("test.csv")
test2$Survived <- 0
test2 <- read.csv("train.csv")
test2$Survived <- 0
test2$Survived[test$Sex == 'female'] <- 1
test2$Survived[test$Sex == 'female' & test$Pclass == 3 & test$Fare >= 20] <- 0
ind=sample(2,nrow(iris),replace=TRUE,prob=c(0.7,0.3))
entrena=iris[ind==1,]
test=iris[ind==2,]
library("e1071", lib.loc="C:/Program Files/R/R-3.1.2/library")
install.packages("e1071")
library("e1071")
modelo=Species~Sepal.Length+Sepal.Width+Petal.Length+Petal.Width
iris_naive=naiveBayes(modelo,data=entrena)
table(predict(iris_naive,entrena,type="class"),entrena$Species)
testpred=predict(iris_naive,test,type="class")
table(testpred,test$Species)
tt=table(testpred,test$Species)
tt
dd=diag(tt)
bien=sum(dd)
bien_clasificados=(bien/nrow(test))*100
bien_naive=bien_clasificados
bien_clasificados
100-bien_clasificados
ft=0
m=c(1:nrow(tt))
n=m
prec=n
rec=m
fmes=m
for(i in 1:nrow(tt)){m[i]=sum(tt[i,])}
for(i in 1:nrow(tt)){n[i]=sum(tt[,i])}
for(i in 1:nrow(tt)){prec[i]=dd[i]/m[i]}
for(i in 1:nrow(tt)){rec[i]=dd[i]/n[i]}
for(i in 1:nrow(tt)){fmes[i]=2*dd[i]/(m[i]+n[i])}
ft=0
for(i in 1:nrow(tt)){ft=ft+(fmes[i]/nrow(tt))}
prec
rec
fmes
ft
ft_naive=ft
install.packages("dplyr")
library("dplyr")
datos=data.frame(bankloan[,5:9])
library(readr)
bankloan <- read_delim("C:/Users/fboli/Downloads/bankloan-spss.csv",
";", escape_double = FALSE, locale = locale(decimal_mark = ",",
grouping_mark = "."), trim_ws = TRUE)
View(bankloan)
datos=data.frame(bankloan[,5:9])
dato=filter(datos,is.na(datos$impago)==FALSE)
ind=sample(2,nrow(dato),replace=TRUE,prob=c(0.7,0.3))
entrena=dato[ind==1,]
test=dato[ind==2,]
entrena
test
library("rpart")
modelo=(as.character(impago)~ingresos+deudaingr+deudacred+deudaotro)
arbol3=rpart(modelo,data=entrena)
arbol4=rpart(modelo,data=entrena,parms=list(split="information"))
plot(arbol3) ; text(arbol3)
plot(arbol4) ; text(arbol4)
table(predict(arbol3,type="class"),as.character(entrena$impago))
table(predict(arbol4,type="class"),as.character(entrena$impago))
testpred=predict(arbol3,newdata=test,type="class")
table(testpred,as.character(test$impago))
tt=table(testpred,as.character(test$impago))
tt
dd=diag(tt)
dd
bien_clasificados=(bien/nrow(test))*100
bien_clasificados
100-bien_clasificados
train <- read.csv("train.csv")
test <- read.csv("test.csv")
test2 <- read.csv("train.csv")
summary(train$Sex)
prop.table(table(train$Sex, train$Survived))
prop.table(table(train$Sex, train$Survived), 1)
test$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1
test2$Survived <- 0
test$Survived[test$Sex == 'female'] <- 1
test2$Survived[test$Sex == 'female'] <- 1
submit <- data.frame(PassengerId = test2$PassengerId, Survived = test2$Survived)
write.csv(submit, file = "gendermodel2.csv", row.names = FALSE)
test2$Survived <-0
test2$Survived[test$Sex == 'female'] <- 1
test2$Survived[test$Sex == 'female' & test$Pclass == 3 & test$Fare >= 20] <- 0
submit <- data.frame(PassengerId = test2$PassengerId, Survived = test2$Survived)
write.csv(submit, file = "genderclassmodel2.csv", row.names = FALSE)
